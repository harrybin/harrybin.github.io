---
import { SITE } from "@config";
import "@styles/base.css";
import { ViewTransitions } from "astro:transitions";

const googleSiteVerification = import.meta.env.PUBLIC_GOOGLE_SITE_VERIFICATION;

export interface Props {
  title?: string;
  author?: string;
  description?: string;
  ogImage?: string;
  canonicalURL?: string;
}

const {
  title = SITE.title,
  author = SITE.author,
  description = SITE.desc,
  ogImage = SITE.ogImage,
  canonicalURL = new URL(Astro.url.pathname, Astro.site).href,
} = Astro.props;

const socialImageURL = new URL(
  ogImage ?? SITE.ogImage ?? "og.png",
  Astro.url.origin
).href;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />

    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <!-- Google Font -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital,wght@0,400;0,500;0,600;0,700;1,400;1,600&display=swap"
      rel="stylesheet"
    />

    <meta name="theme-color" content="" />

    {
      // If PUBLIC_GOOGLE_SITE_VERIFICATION is set in the environment variable,
      // include google-site-verification tag in the heading
      // Learn more: https://support.google.com/webmasters/answer/9008080#meta_tag_verification&zippy=%2Chtml-tag
      googleSiteVerification && (
        <meta
          name="google-site-verification"
          content={googleSiteVerification}
        />
      )
    }

    <ViewTransitions />
    <script is:inline src="/toggle-theme.js"></script>
  </head>
  <body>
    <slot />
    <div
      id="cookie-banner"
      style="position:fixed;bottom:0;left:0;width:100%;background:#222;color:#fff;padding:1rem;z-index:1000;display:none;justify-content:center;align-items:center;gap:1rem;font-size:1rem;"
    >
      <span>
        This site uses cookies for analytics (Microsoft Clarity). By clicking
        Accept, you consent to the use of cookies for analytics purposes. See
        our <a href="/privacy" style="color:#4fd1c5;text-decoration:underline;"
          >privacy policy</a
        >.
      </span>
      <button
        id="cookie-accept"
        style="background:#4fd1c5;color:#222;padding:0.5rem 1rem;border:none;border-radius:4px;cursor:pointer;"
        >Accept</button
      >
    </div>
    <script is:inline>
      // Show banner if not accepted
      if (!window.localStorage.getItem("cookieConsent")) {
        document.getElementById("cookie-banner").style.display = "flex";
      } else {
        window.dispatchEvent(new Event("cookieConsentGiven"));
      }
      document.getElementById("cookie-accept").onclick = function () {
        window.localStorage.setItem("cookieConsent", "true");
        document.getElementById("cookie-banner").style.display = "none";
        window.dispatchEvent(new Event("cookieConsentGiven"));
      };
    </script>
    <script is:inline>
      // Only activate Clarity after consent
      function loadClarity() {
        (function (c, l, a, r, i, t, y) {
          c[a] =
            c[a] ||
            function () {
              (c[a].q = c[a].q || []).push(arguments);
            };
          t = l.createElement(r);
          t.async = 1;
          t.src = "https://www.clarity.ms/tag/" + i;
          y = l.getElementsByTagName(r)[0];
          y.parentNode.insertBefore(t, y);
        })(window, document, "clarity", "script", "sb1flusu90");
        const clarityUserId =
          window.localStorage.getItem("userId") || "anonymous";
        const clarityPageId = window.location.pathname;
        window.clarityQueue = window.clarityQueue || [];
        window.clarity =
          window.clarity ||
          function () {
            clarityQueue.push(arguments);
          };
        window.clarity("identify", clarityUserId, undefined, clarityPageId);
      }
      if (window.localStorage.getItem("cookieConsent")) {
        loadClarity();
      } else {
        window.addEventListener("cookieConsentGiven", loadClarity, {
          once: true,
        });
      }
    </script>
  </body>
</html>
